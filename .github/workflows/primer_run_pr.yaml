# Most of this is inspired by the mypy primer
# See: https://github.com/hauntsaninja/mypy_primer
# This is the primer job that runs on every PR

name: Primer / Run

on:
  pull_request:
    paths:
      - "pylint/**"
      - "tests/primer/**"
      - "requirements*"
      - ".github/workflows/**"

env:
  CACHE_VERSION: 1

jobs:
  run-primer:
    name: Run / ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.0.2
      - name: Set up Python ${{ matrix.python-version }}
        id: python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v1
        with:
          version: 12
      - run: npm install @octokit/rest

      # Restore cached Python environment
      - name: Generate partial Python venv restore key
        id: generate-python-key
        run: >-
          echo "::set-output name=key::venv-${{ env.CACHE_VERSION }}-${{
            hashFiles('setup.cfg', 'requirements_test.txt', 'requirements_test_min.txt')
          }}"
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v3.0.2
        with:
          path: venv
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
            steps.generate-python-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-venv-${{ env.CACHE_VERSION }}-
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          python -m pip install -U pip setuptools wheel
          pip install -U -r requirements_test.txt

      # Cache primer packages
      - name: Download diffs
        uses: actions/github-script@v6
        with:
          script: |
            // Download 'main' pylint output
            const fs = require('fs');
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({});
            const runs = await octokit.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: ".github/workflows/primer_run_main.yaml",
              status: "completed"
            });
            const lastRunMain = runs.data.workflow_runs.reduce(function(prev, current) {
                return (prev.run_number > current.run_number) ? prev : current
            })
            console.log("Last run on main:")
            console.log(lastRunMain.html_url)
            const artifacts_main = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: lastRunMain.id,
            });
            const [matchArtifactMain] = artifacts_main.data.artifacts.filter((artifact) =>
              artifact.name == "primer_commitstring");
            const downloadWorkflow = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifactMain.id,
               archive_format: "zip",
            });
            fs.writeFileSync("primer_commitstring.zip", Buffer.from(downloadWorkflow.data));
      - name: Copy and unzip the commit string
        run: |
          unzip primer_commitstring.zip
          cp commit_string.txt .pylint_primer_tests/commit_string.txt
      - name: Get commit string
        id: commitstring
        run: |
          . venv/bin/activate
          output=$(python tests/primer/primer_tool.py prepare --read-commit-string)
          echo "::set-output name=commitstring::$output"
      - name: Restore projects cache
        id: cache-projects
        uses: actions/cache@v3
        with:
          path: .pylint_primer_tests/
          key: >-
            ${{ runner.os }}-${{ matrix.python-version }}-${{
            steps.commitstring.outputs.commitstring }}-primer
      - name: Check cache
        run: |
          . venv/bin/activate
          python tests/primer/primer_tool.py prepare --check

      - name: Save PR number
        run: |
          echo ${{ github.event.pull_request.number }} | tee pr_number.txt
      - name: Upload PR number
        uses: actions/upload-artifact@v2
        with:
          name: primer_pylint_output_workflow
          path: pr_number.txt
