[metadata]
name = pylint
version = attr: pylint.__pkginfo__.__version__
description = python code static checker
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Python Code Quality Authority
author_email = code-quality@python.org
license = GPL-2.0-or-later
license_files =
    LICENSE
    CONTRIBUTORS.txt
classifiers =
    Development Status :: 6 - Mature
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: GNU General Public License v2 (GPLv2)
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Debuggers
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing
keywords = static code analysis linter python lint
project_urls =
    Homepage = https://www.pylint.org/
    Source Code = https://github.com/PyCQA/pylint
    What's New = https://pylint.pycqa.org/en/latest/whatsnew/
    Bug Tracker = https://github.com/PyCQA/pylint/issues
    Discord Server = https://discord.gg/Egy6P8AMB5
    Docs: User Guide = https://pylint.pycqa.org/en/latest/
    Docs: Contributing = https://pylint.pycqa.org/en/latest/development_guide/contribute.html
    Docs: Technical Reference = https://pylint.pycqa.org/en/latest/technical_reference/index.html

[options]
packages = find:
install_requires =
    platformdirs>=2.2.0
    astroid>=2.9.0,<2.10 # (You should also upgrade requirements_test_min.txt)
    isort>=4.2.5,<6
    mccabe>=0.6,<0.7
    toml>=0.9.2
    colorama;sys_platform=="win32"
    typing-extensions>=3.10.0;python_version<"3.10"
python_requires = >=3.6.2

[options.packages.find]
include =
    pylint*

[options.entry_points]
console_scripts =
    pylint = pylint:run_pylint
    epylint = pylint:run_epylint
    pyreverse = pylint:run_pyreverse
    symilar = pylint:run_symilar

[aliases]
test = pytest

[tool:pytest]
testpaths = tests
python_files = *test_*.py
addopts = --strict-markers
markers =
    primer_stdlib: Checks for crashes and errors when running pylint on stdlib
    primer_external_batch_one: Checks for crashes and errors when running pylint on external libs (batch one)
    primer_external_batch_two: Checks for crashes and errors when running pylint on external libs (batch two)
    benchmark: Baseline of pylint performance, if this regress something serious happened

[isort]
profile = black
known_third_party = platformdirs, astroid, sphinx, isort, pytest, mccabe, six, toml
skip_glob = tests/functional/**,tests/input/**,tests/extensions/data/**,tests/regrtest_data/**,tests/data/**,astroid/**,venv/**
src_paths = pylint

[mypy]
no_implicit_optional = True
scripts_are_modules = True
warn_unused_ignores = True
show_error_codes = True

[mypy-astroid.*]
ignore_missing_imports = True

[mypy-tests.*]
ignore_missing_imports = True

[mypy-coverage]
ignore_missing_imports = True

[mypy-enchant.*]
ignore_missing_imports = True

[mypy-isort.*]
ignore_missing_imports = True

[mypy-mccabe]
ignore_missing_imports = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-setuptools]
ignore_missing_imports = True

[mypy-_string]
ignore_missing_imports = True

[mypy-toml.decoder]
ignore_missing_imports = True

[mypy-git.*]
ignore_missing_imports = True
