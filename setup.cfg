[metadata]
name = pylint
version = attr: pylint.__pkginfo__.__version__
description = python code static checker
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://github.com/PyCQA/pylint
author = Python Code Quality Authority
author_email = code-quality@python.org
license = GPL-2.0-or-later
license_files =
    LICENSE
    CONTRIBUTORS.txt
classifiers =
    Development Status :: 6 - Mature
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: GNU General Public License v2 (GPLv2)
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Debuggers
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing
keywords = static code analysis linter python lint
project_urls =
    What's New = https://pylint.pycqa.org/en/latest/whatsnew/
    Bug tracker = https://github.com/PyCQA/pylint/issues
    Discord server = https://discord.gg/Egy6P8AMB5
    User manual = http://pylint.pycqa.org/en/latest/
    Contributing = http://pylint.pycqa.org/en/latest/development_guide/contribute.html
    Technical references = http://pylint.pycqa.org/en/latest/technical_reference/index.html

[options]
packages = find:
install_requires =
    astroid>=2.6.2,<2.7 # (You should also upgrade requirements_test_min.txt)
    isort>=4.2.5,<6
    mccabe>=0.6,<0.7
    toml>=0.7.1
    colorama;sys_platform=="win32"
python_requires = ~=3.6

[options.packages.find]
include =
    pylint*

[options.entry_points]
console_scripts =
    pylint = pylint:run_pylint
    epylint = pylint:run_epylint
    pyreverse = pylint:run_pyreverse
    symilar = pylint:run_symilar

[aliases]
test = pytest

[tool:pytest]
testpaths = tests
python_files = *test_*.py
addopts = -m "not acceptance"
markers =
    acceptance:
    benchmark: Baseline of pylint performance, if this regress something serious happened

[isort]
multi_line_output = 3
line_length = 88
known_third_party = astroid, sphinx, isort, pytest, mccabe, six, toml
include_trailing_comma = True
skip_glob = tests/functional/**,tests/input/**,tests/extensions/data/**,tests/regrtest_data/**,tests/data/**,astroid/**,venv/**
src_paths = pylint

[mypy]
scripts_are_modules = True

[mypy-astroid.*]
ignore_missing_imports = True

[mypy-coverage]
ignore_missing_imports = True

[mypy-enchant.*]
ignore_missing_imports = True

[mypy-isort.*]
ignore_missing_imports = True

[mypy-mccabe]
ignore_missing_imports = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-_pytest.*]
ignore_missing_imports = True

[mypy-setuptools]
ignore_missing_imports = True

[mypy-_string]
ignore_missing_imports = True

[mypy-toml.decoder]
ignore_missing_imports = True
